/*
 * This file is generated by jOOQ.
 */
package com.dg.heptensecretsanta;


import com.dg.heptensecretsanta.tables.FlywaySchemaHistory;
import com.dg.heptensecretsanta.tables.GiftTheme;
import com.dg.heptensecretsanta.tables.GiftThemeRoomMapping;
import com.dg.heptensecretsanta.tables.GiftThemeUserMapping;
import com.dg.heptensecretsanta.tables.NicknameTheme;
import com.dg.heptensecretsanta.tables.NicknameUserMapping;
import com.dg.heptensecretsanta.tables.Room;
import com.dg.heptensecretsanta.tables.RoomUserMapping;
import com.dg.heptensecretsanta.tables.User;
import com.dg.heptensecretsanta.tables.records.FlywaySchemaHistoryRecord;
import com.dg.heptensecretsanta.tables.records.GiftThemeRecord;
import com.dg.heptensecretsanta.tables.records.GiftThemeRoomMappingRecord;
import com.dg.heptensecretsanta.tables.records.GiftThemeUserMappingRecord;
import com.dg.heptensecretsanta.tables.records.NicknameThemeRecord;
import com.dg.heptensecretsanta.tables.records.NicknameUserMappingRecord;
import com.dg.heptensecretsanta.tables.records.RoomRecord;
import com.dg.heptensecretsanta.tables.records.RoomUserMappingRecord;
import com.dg.heptensecretsanta.tables.records.UserRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * public.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<FlywaySchemaHistoryRecord> FLYWAY_SCHEMA_HISTORY_PK = Internal.createUniqueKey(FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY, DSL.name("flyway_schema_history_pk"), new TableField[] { FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY.INSTALLED_RANK }, true);
    public static final UniqueKey<GiftThemeRecord> GIFT_THEME_PKEY = Internal.createUniqueKey(GiftTheme.GIFT_THEME, DSL.name("gift_theme_pkey"), new TableField[] { GiftTheme.GIFT_THEME.ID }, true);
    public static final UniqueKey<GiftThemeRoomMappingRecord> GIFT_THEME_ROOM_MAPPING_PK = Internal.createUniqueKey(GiftThemeRoomMapping.GIFT_THEME_ROOM_MAPPING, DSL.name("gift_theme_room_mapping_pk"), new TableField[] { GiftThemeRoomMapping.GIFT_THEME_ROOM_MAPPING.GIFT_THEME_ID, GiftThemeRoomMapping.GIFT_THEME_ROOM_MAPPING.ROOM_ID }, true);
    public static final UniqueKey<GiftThemeUserMappingRecord> GIFT_THEME_USER_MAPPING_PK = Internal.createUniqueKey(GiftThemeUserMapping.GIFT_THEME_USER_MAPPING, DSL.name("gift_theme_user_mapping_pk"), new TableField[] { GiftThemeUserMapping.GIFT_THEME_USER_MAPPING.ROOM_ID, GiftThemeUserMapping.GIFT_THEME_USER_MAPPING.USER_ID }, true);
    public static final UniqueKey<NicknameThemeRecord> NICKNAME_THEME_PKEY = Internal.createUniqueKey(NicknameTheme.NICKNAME_THEME, DSL.name("nickname_theme_pkey"), new TableField[] { NicknameTheme.NICKNAME_THEME.ID }, true);
    public static final UniqueKey<NicknameUserMappingRecord> NICKNAME_USER_MAPPING_PK = Internal.createUniqueKey(NicknameUserMapping.NICKNAME_USER_MAPPING, DSL.name("nickname_user_mapping_pk"), new TableField[] { NicknameUserMapping.NICKNAME_USER_MAPPING.ROOM_ID, NicknameUserMapping.NICKNAME_USER_MAPPING.USER_ID }, true);
    public static final UniqueKey<RoomRecord> ROOM_PKEY = Internal.createUniqueKey(Room.ROOM, DSL.name("room_pkey"), new TableField[] { Room.ROOM.ID }, true);
    public static final UniqueKey<RoomUserMappingRecord> ROOM_USER_MAPPING_PK = Internal.createUniqueKey(RoomUserMapping.ROOM_USER_MAPPING, DSL.name("room_user_mapping_pk"), new TableField[] { RoomUserMapping.ROOM_USER_MAPPING.ROOM_ID, RoomUserMapping.ROOM_USER_MAPPING.USER_ID }, true);
    public static final UniqueKey<UserRecord> USER_PKEY = Internal.createUniqueKey(User.USER, DSL.name("user_pkey"), new TableField[] { User.USER.ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<GiftThemeRoomMappingRecord, GiftThemeRecord> GIFT_THEME_ROOM_MAPPING__GIFT_THEME = Internal.createForeignKey(GiftThemeRoomMapping.GIFT_THEME_ROOM_MAPPING, DSL.name("gift_theme"), new TableField[] { GiftThemeRoomMapping.GIFT_THEME_ROOM_MAPPING.GIFT_THEME_ID }, Keys.GIFT_THEME_PKEY, new TableField[] { GiftTheme.GIFT_THEME.ID }, true);
    public static final ForeignKey<GiftThemeRoomMappingRecord, RoomRecord> GIFT_THEME_ROOM_MAPPING__ROOM_FK = Internal.createForeignKey(GiftThemeRoomMapping.GIFT_THEME_ROOM_MAPPING, DSL.name("room_fk"), new TableField[] { GiftThemeRoomMapping.GIFT_THEME_ROOM_MAPPING.ROOM_ID }, Keys.ROOM_PKEY, new TableField[] { Room.ROOM.ID }, true);
    public static final ForeignKey<GiftThemeUserMappingRecord, GiftThemeRecord> GIFT_THEME_USER_MAPPING__GIFT_THEME_USER_MAPPING_GIFT_THEME_FK = Internal.createForeignKey(GiftThemeUserMapping.GIFT_THEME_USER_MAPPING, DSL.name("gift_theme_user_mapping_gift_theme_fk"), new TableField[] { GiftThemeUserMapping.GIFT_THEME_USER_MAPPING.GIFT_THEME_ID }, Keys.GIFT_THEME_PKEY, new TableField[] { GiftTheme.GIFT_THEME.ID }, true);
    public static final ForeignKey<GiftThemeUserMappingRecord, RoomRecord> GIFT_THEME_USER_MAPPING__GIFT_THEME_USER_MAPPING_ROOM_FK = Internal.createForeignKey(GiftThemeUserMapping.GIFT_THEME_USER_MAPPING, DSL.name("gift_theme_user_mapping_room_fk"), new TableField[] { GiftThemeUserMapping.GIFT_THEME_USER_MAPPING.ROOM_ID }, Keys.ROOM_PKEY, new TableField[] { Room.ROOM.ID }, true);
    public static final ForeignKey<GiftThemeUserMappingRecord, UserRecord> GIFT_THEME_USER_MAPPING__GIFT_THEME_USER_MAPPING_USER_FK = Internal.createForeignKey(GiftThemeUserMapping.GIFT_THEME_USER_MAPPING, DSL.name("gift_theme_user_mapping_user_fk"), new TableField[] { GiftThemeUserMapping.GIFT_THEME_USER_MAPPING.USER_ID }, Keys.USER_PKEY, new TableField[] { User.USER.ID }, true);
    public static final ForeignKey<NicknameUserMappingRecord, RoomRecord> NICKNAME_USER_MAPPING__ROOM_FK = Internal.createForeignKey(NicknameUserMapping.NICKNAME_USER_MAPPING, DSL.name("room_fk"), new TableField[] { NicknameUserMapping.NICKNAME_USER_MAPPING.ROOM_ID }, Keys.ROOM_PKEY, new TableField[] { Room.ROOM.ID }, true);
    public static final ForeignKey<NicknameUserMappingRecord, UserRecord> NICKNAME_USER_MAPPING__USER_FK = Internal.createForeignKey(NicknameUserMapping.NICKNAME_USER_MAPPING, DSL.name("user_fk"), new TableField[] { NicknameUserMapping.NICKNAME_USER_MAPPING.USER_ID }, Keys.USER_PKEY, new TableField[] { User.USER.ID }, true);
    public static final ForeignKey<RoomRecord, NicknameThemeRecord> ROOM__NICKNAME_THEME_FK = Internal.createForeignKey(Room.ROOM, DSL.name("nickname_theme_fk"), new TableField[] { Room.ROOM.NICKNAME_THEME_ID }, Keys.NICKNAME_THEME_PKEY, new TableField[] { NicknameTheme.NICKNAME_THEME.ID }, true);
    public static final ForeignKey<RoomRecord, UserRecord> ROOM__USER_FK = Internal.createForeignKey(Room.ROOM, DSL.name("user_fk"), new TableField[] { Room.ROOM.USER_ID }, Keys.USER_PKEY, new TableField[] { User.USER.ID }, true);
    public static final ForeignKey<RoomUserMappingRecord, RoomRecord> ROOM_USER_MAPPING__ROOM_FK = Internal.createForeignKey(RoomUserMapping.ROOM_USER_MAPPING, DSL.name("room_fk"), new TableField[] { RoomUserMapping.ROOM_USER_MAPPING.ROOM_ID }, Keys.ROOM_PKEY, new TableField[] { Room.ROOM.ID }, true);
    public static final ForeignKey<RoomUserMappingRecord, UserRecord> ROOM_USER_MAPPING__USER_FK = Internal.createForeignKey(RoomUserMapping.ROOM_USER_MAPPING, DSL.name("user_fk"), new TableField[] { RoomUserMapping.ROOM_USER_MAPPING.USER_ID }, Keys.USER_PKEY, new TableField[] { User.USER.ID }, true);
}
